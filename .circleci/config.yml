version: 2.1

orbs:
  win: circleci/windows@2.2.0

executors:
  windows-cpu:
    machine:
      resource_class: windows.medium
      image: windows-server-2019-vs2019:stable
      shell: cmd.exe

jobs:
  windows_build:
    executor:
      name: windows-cpu
    steps:
      - checkout
      - run:
          name: Build
          command: |
            git submodule sync
            git submodule update --init --recursive
            conda create -n py376_build python=3.7.6
            conda activate py376_build
            conda install cmake
            mkdir build
            cd build
            cmake ..
            for /f "usebackq tokens=*" %i in (`"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -version [16^,17^) -products * -latest -property installationPath`) do call "%i\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=%CMAKE_GENERATOR_TOOLSET_VERSION%
            msbuild ALL_BUILD.vcxproj

  build:
    parameters:
      docker_image:
        type: string
        default: ""
      apt_get:
        type: string
        default: ""
      cmake_compiler:
        type: string
        default: ""
      cmake_args:
        type: string
        default: ""
    docker:
      - image: << parameters.docker_image >>
    steps:
      - checkout
      - run:
          name: Install apt packages
          command: |
            apt-get update
            apt-get install -y build-essential cmake libibverbs-dev << parameters.apt_get >>
      - run:
          name: Install libuv
          command: |
            apt-get install -y wget pkg-config
            wget \
              -q \
              -O libuv-v1.26.0.tar.gz \
              https://dist.libuv.org/dist/v1.26.0/libuv-v1.26.0.tar.gz
            tar xf libuv-v1.26.0.tar.gz
            cd libuv-v1.26.0
            mkdir -p build
            cd build
            cmake ../ \
              -DCMAKE_INSTALL_PREFIX=/usr/local \
              << parameters.cmake_compiler >>
            make install
      - run:
          name: Install googletest
          command: |
            wget \
              -q \
              -O googletest-release-1.10.0.tar.gz \
              https://github.com/google/googletest/archive/release-1.10.0.tar.gz
            tar xf googletest-release-1.10.0.tar.gz
            cd googletest-release-1.10.0
            mkdir -p build
            cd build
            cmake ../ \
              -DCMAKE_INSTALL_PREFIX=/usr/local \
              << parameters.cmake_compiler >>
            make install
      - run:
          name: Build
          command: |
            mkdir build
            cd build
            cmake ../ \
              -DCMAKE_VERBOSE_MAKEFILE=ON \
              -DUSE_IBVERBS=ON \
              -DUSE_LIBUV=ON \
              -DBUILD_TEST=ON \
              << parameters.cmake_compiler >> \
              << parameters.cmake_args >>
            make
      - run:
          name: Test
          command: |
            export TSAN_OPTIONS="suppressions=$PWD/.tsan-suppressions"

            # Exclude large broadcast test because it OOMs on CircleCI.
            EXCLUDE="LargeBroadcast/BroadcastTest*"

            # Exclude multi-process transport tests because
            # they appear to have some crashing problem...
            EXCLUDE="Transport/TransportMultiProcTest*:$EXCLUDE"

            # Exclude memory leak test for tsan job (false positive).
            if [ "$CIRCLE_JOB" == "tsan" ]; then
              EXCLUDE="MemoryTest.ManySlotsNoLeaks:$EXCLUDE"
            fi

            build/gloo/test/gloo_test --gtest_filter="-$EXCLUDE"

workflows:
  build:
    jobs:
      - windows_build:
          name: windows_build
